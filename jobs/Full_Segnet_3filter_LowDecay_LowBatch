,1,1,1,3,1,1,1,3,1,1,1,3,1,1,3,1,1),
((3,32,3,1,1),(32,32,3,1,1),(2,2,0),(32,64,3,1,1),(64,64,3,1,1),(2,2,0),(64,128,3,1,1),(128,128,3,1,1),(128,128,3,1,1),(2,2,0),(128,256,3,1,1),(256,256,3,1,1),(256,256,3,1,1),(2,2,0),(256,512,3,1,1),(512,512,3,1,1),(512,512,3,1,1),(2,2,0),
(2,2),(1024,512,3,1,1),(512,512,3,1,1),(512,256,3,1,1),(2,2),(512,256,3,1,1),(256,256,3,1,1),(256,128,3,1,1),(2,2),(256,128,3,1,1),(128,128,3,1,1),(128,64,3,1,1),(2,2),(128,64,3,1,1),(64,32,3,1,1),(2,2),(64,32,3,1,1),(32,3,3,1,1)
)),
"Parameters":
"self.set_parameters(LEARNING_RATE=0.00001, loss_function=nn.MSELoss(reduction='sum'),
                   optimizer=None, weight_decay=0.001, validation_size=4, max_iter=10000, log_every=100, batch_size=8,
                   seed = 1)"

}